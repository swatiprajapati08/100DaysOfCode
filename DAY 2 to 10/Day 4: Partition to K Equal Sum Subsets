//698. Partition to K Equal Sum Subsets


class Solution {
    public boolean canPartitionKSubsets(int[] nums, int k) {
        int sum=Arrays.stream(nums).sum();
        
        
        if(sum%k!=0||k<0)
            return false;
        else
        {
            boolean visited[]=new boolean[nums.length];
            return subset(nums,visited,k,0,0,sum/k);
        }
        
    }
     static boolean subset(int nums[],boolean visited[],int k,int start,int sum,int target)
     {
         if(k==0)return true;
         if(sum==target)return subset(nums,visited,k-1,0,0,target);
         for(int i=start;i<nums.length;i++)
         {
             if(!visited[i])
             {
                 visited[i]=true;
                 if(subset(nums,visited,k,i+1,sum+nums[i],target))return true;
                 visited[i]=false;
             }
         }
         return false;
     }
}
