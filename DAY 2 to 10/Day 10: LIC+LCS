//Longest Increasing Subsequence using Longest Common Subsequence Algorithm
// it will consider the equal element as increasing.

class LongestSubsequence{
    
    // function to find longest increasing subsequence
    long longestSubsequence(int n, int arr[]){
    int arr2[]=arr.clone();
    Arrays.sort(arr2);
    
    int dp[][]=new int[n+1][n+1];
     
    for(int i=0;i<=n;i++)
    {
        for(int j=0;j<=n;j++)
        {
            if(i==0||j==0)
            dp[i][j]=0;
            
            else if(arr[i-1]==arr2[j-1])
            dp[i][j]=dp[i-1][j-1]+1;
            else
            dp[i][j]=Math.max(dp[i-1][j],dp[i][j-1]);
        }
    }
    return dp[n][n];
     
    
    }
    
}
