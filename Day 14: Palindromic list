//check if a singly linked list is palindrome

class Palindrome
{
    boolean isPalindrome(Node head) 
    {
        Node slow=head,fast=head;
        
        while(slow!=null && fast!=null && fast.next!=null)
        {
            slow=slow.next;
            fast=fast.next.next;
        }
        slow=reverse(slow);
        fast=head;
        while(slow!=null && fast!=null)
        {
            if(slow.data!=fast.data)
            return false;
            slow=slow.next;
            fast=fast.next;
        }
       return true;
    } 
    
    
    
    static Node reverse(Node node)
    {
        Node prev=null,nextptr=null,curr=node;
        
        while(curr!=null)
        {
            nextptr=curr.next;
            curr.next=prev;
            prev=curr;
            curr=nextptr;
        }
        return prev;
    }
}

