//Count Components

import java.util.*;
  import java.io.*;
  
  class Graph
  {
    private int V;
    private ArrayList<ArrayList<Integer>> adj;
    
    Graph(int V)
    {
      this.V=V;
      adj=new ArrayList<ArrayList<Integer>>();
      for(int i=0;i<V;i++)
      adj.add(new ArrayList<Integer>());
    }
    
    void addEdge(int u,int v)
    {
      adj.get(u).add(v);
      adj.get(v).add(u);
    }
    
    void dfs(int v,boolean visited[])
    {
      visited[v]=true;
      for(int i: adj.get(v))
      {
        if(!visited[i])
        dfs(i,visited);
      }
    }
    
    void dfsUtil(int s)
    {
      boolean visited[]=new boolean[V];
      int c=0;
      
      for(int i=0;i<V;i++)
      {
        if(!visited[i])
        {
          c++;
          dfs(i,visited);
        }
      }
      System.out.println(c);
    }
  }
  
  
  public class Main {
    public static void main(String args[]) throws IOException {
      
    Scanner sc=new Scanner(System.in);
  int t=sc.nextInt();
  while(t-->0)
  {
    int v=sc.nextInt();
    int e=sc.nextInt();
   Graph g=new Graph(v);
  int num=e;
  int a=0,b=0;
  while(num-->0)
  { 
    a=sc.nextInt();
    b=sc.nextInt();
    g.addEdge(a,b);
  }
  g.dfsUtil(b);
    }
    }
  }
