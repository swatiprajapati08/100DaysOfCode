//Longest Repeating Subsequence

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	public static void main (String[] args)
	 {
	 Scanner sc=new Scanner(System.in);
	 int t=sc.nextInt();
	 while(t-->0)
	 {
	     int n=sc.nextInt();
	     String s=sc.next();
	     System.out.println(LCS(s.toCharArray()));
	 }
	 }
	 static int LCS(char s[])
	 {
	     int dp[][]=new int[s.length+1][s.length+1];
	     for(int i=0;i<=s.length;i++)
	    { dp[i][0]=0;
	    dp[0][i]=0;}
	    
	    for(int i=1;i<=s.length;i++)
	    {
	        for(int j=1;j<=s.length;j++)
	        {
	            if(s[i-1]==s[j-1] && i!=j)
	            dp[i][j]=1+dp[i-1][j-1];
	            else
	            dp[i][j]=Math.max(dp[i-1][j],dp[i][j-1]);
	        }
	    }
	    return dp[s.length][s.length];
	 }
}
